{"version":3,"sources":["logo.svg","api.js","App.js","reportWebVitals.js","index.js"],"names":["getPhotos","sol","camera","a","fetch","res","json","useStyles","makeStyles","root","width","backgroundColor","card","borderRadius","PrettoSlider","withStyles","color","height","thumb","border","boxShadow","active","valueLabel","left","track","opacity","rail","Slider","App","classes","useState","photos","setPhotos","solValue","setSolValue","setCamera","useEffect","prev","setTimeout","then","console","log","className","Card","CardContent","Typography","id","gutterBottom","value","range","min","max","onChange","event","newValue","valueLabelDisplay","aria-labelledby","CardActionArea","InputLabel","htmlFor","NativeSelect","target","map","photo","src","img_src","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAAe,I,8BCGFA,EAAS,uCAAG,WAAOC,EAAKC,GAAZ,eAAAC,EAAA,sEACLC,MAAM,GAAD,OAJR,iDAIQ,iCAAqCH,EAArC,mBAAmDC,EAAnD,YAHT,qDAES,cACjBG,EADiB,gBAGVA,EAAIC,OAHM,mFAAH,wD,8ECOhBC,EAAYC,YAAW,CAC3BC,KAAM,CACJC,MAAO,IACPC,gBAAiB,QAEnBC,KAAM,CACJD,gBAAiB,wBACjBE,aAAc,MAIZC,EAAeC,YAAW,CAC9BN,KAAM,CACJO,MAAO,UACPC,OAAQ,IAEVC,MAAO,CACLD,OAAQ,GACRP,MAAO,GACPC,gBAAiB,qBACjBQ,OAAQ,oBACRN,aAAc,MAGd,6BAA8B,CAC5BO,UAAW,YAGfC,OAAQ,GACRC,WAAY,CACVC,KAAM,qBAERC,MAAO,CACLP,OAAQ,GACRJ,aAAc,EACdY,QAAS,IAGXC,KAAM,CACJT,OAAQ,GACRE,OAAQ,oBACRR,gBAAiB,cACjBE,aAAc,EACdY,QAAS,KAhCQV,CAkClBY,KA4EYC,MAzEf,WACE,IAAMC,EAAUtB,IADH,EAEeuB,mBAAS,IAFxB,mBAENC,EAFM,KAEEC,EAFF,OAGmBF,mBAAS,GAH5B,mBAGNG,EAHM,KAGIC,EAHJ,OAIeJ,mBAAS,IAJxB,mBAIN5B,EAJM,KAIEiC,EAJF,KAqBb,OAfAC,qBAAU,SAACC,GACHJ,GAAY/B,GACdoC,YAAW,WACTtC,EAAUiC,EAAU/B,GACjBqC,MAAK,SAAAR,GAAM,OAAIC,EAAUD,EAAOA,aAClC,KAELS,QAAQC,IAAIJ,KACb,CAACnC,IAMJsC,QAAQC,IAAIR,EAAU/B,EAAQ6B,GAE5B,sBAAKW,UAAU,MAAf,UACE,cAACC,EAAA,EAAD,CAAMD,UAAWb,EAAQjB,KAAO,mBAAhC,SACE,eAACgC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,GAAG,eAAeC,cAAY,EAA1C,mBAGA,cAACjC,EAAD,CACEkC,MAAOf,EACPS,UAAWb,EAAQoB,MAAQ,SAC3BC,IAAK,EACLC,IAAK,IACLC,SAjBW,SAACC,EAAOC,GAC3BpB,EAAYoB,IAiBJC,kBAAkB,OAElBC,kBAAgB,2BAItB,cAACb,EAAA,EAAD,CAAMD,UAAWb,EAAQpB,KAAzB,SACA,cAACgD,EAAA,EAAD,UACE,eAACb,EAAA,EAAD,WACE,cAACc,EAAA,EAAD,CAAYC,QAAQ,SAApB,qBACE,eAACC,EAAA,EAAD,CACEd,GAAG,SACHJ,UAAU,SACVM,MAAO9C,EACPkD,SAAU,gBAAES,EAAF,EAAEA,OAAF,OAAc1B,EAAU0B,EAAOb,QAJ3C,UAME,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,4BAKP,yCAGGjB,GAAUA,EAAO+B,KAAI,SAAAC,GAAK,OACxB,qBACErD,MAAM,QACNO,OAAO,QACP+C,IAAKD,EAAME,QACXC,IAAI,oBC9GHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ee3dc586.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const BASE_URL = 'https://api.nasa.gov/mars-photos/api/v1/rovers';\nconst API_KEY = 'api_key=0b9RxYiObMhFROg07RyXM1JJ0e9PQDU0GVsxQx2e';\n\nexport const getPhotos = async (sol, camera) => {\n  const res = await fetch(`${BASE_URL}/curiosity/photos?sol=${sol}&camera=${camera}&${API_KEY}`)\n  \n  return await res.json();\n}","import logo from './logo.svg';\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { getPhotos } from './api'\nimport { Input } from '@material-ui/core';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport { NativeSelect, InputLabel, Card, CardActionArea, CardContent } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 300,\n    backgroundColor: 'grey'\n  },\n  card: {\n    backgroundColor: 'rgba(94, 7, 194, 0.1)',\n    borderRadius: 10,\n  }\n});\n\nconst PrettoSlider = withStyles({\n  root: {\n    color: '#095f77',\n    height: 15,\n  },\n  thumb: {\n    height: 36,\n    width: 36,\n    backgroundColor: 'rgba(0, 0, 0, 0.8)',\n    border: '3px solid #095f77',\n    borderRadius: '5px',\n    // marginTop: -8,\n    // marginLeft: -12,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 18px)',\n  },\n  track: {\n    height: 24,\n    borderRadius: 4,\n    opacity: 0.5,\n\n  },\n  rail: {\n    height: 20,\n    border: '3px solid #095f77',\n    backgroundColor: 'transparent',\n    borderRadius: 4,\n    opacity: 0.9,\n  },\n})(Slider);\n\n\nfunction App() {\n  const classes = useStyles();\n  const [photos, setPhotos] = useState([])\n  const [solValue, setSolValue] = useState(0);\n  const [camera, setCamera] = useState('');\n\n  useEffect((prev)=>{\n      if (solValue && camera) {\n        setTimeout(()=>{\n          getPhotos(solValue, camera)\n            .then(photos => setPhotos(photos.photos))\n        }, 5000)\n      }\n      console.log(prev)\n  }, [camera])\n\n  const handleChange = (event, newValue) => {\n    setSolValue(newValue);\n  };\n\n  console.log(solValue, camera, photos)\n  return (\n    <div className=\"App\">\n      <Card className={classes.card + \" app__card-range\"}>\n        <CardContent>\n          <Typography id=\"range-slider\" gutterBottom>\n            Range\n          </Typography>\n          <PrettoSlider\n            value={solValue}\n            className={classes.range + \" range\"}\n            min={0}\n            max={1000}\n            onChange={handleChange}\n            valueLabelDisplay=\"auto\"\n            // aria-labelledby=\"range-slider\"\n            aria-labelledby=\"non-linear-slider\"\n          />\n        </CardContent>\n    </Card>\n      <Card className={classes.root}>\n      <CardActionArea>\n        <CardContent>\n          <InputLabel htmlFor=\"select\">Cameras</InputLabel>\n            <NativeSelect \n              id=\"select\"\n              className=\"select\"\n              value={camera}\n              onChange={({target}) => setCamera(target.value)}\n            >\n              <option value=\"fhaz\">FHAZ</option>\n              <option value=\"rhaz\">RHAZ</option>\n            </NativeSelect>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n       <div>\n        Photo:\n        {\n          photos && photos.map(photo => (\n            <img \n              width=\"500px\" \n              height='500px' \n              src={photo.img_src}  \n              alt=\"photo\"\n            />\n          ))\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}